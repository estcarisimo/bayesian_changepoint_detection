[metadata]
name = bayesian-changepoint-detection
description = Bayesian changepoint detection algorithms with PyTorch support
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/hildensia/bayesian_changepoint_detection
author = Johannes Kulick
author_email = mail@johanneskulick.net
license = MIT
license_files = LICENSE
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Scientific/Engineering :: Artificial Intelligence

[options]
packages = find:
python_requires = >=3.8.1
include_package_data = True
zip_safe = False
install_requires =
    torch>=2.0.0
    numpy>=1.21.0
    scipy>=1.7.0
    matplotlib>=3.5.0
    seaborn>=0.11.0

[options.packages.find]
exclude =
    tests*
    docs*
    examples*

[options.extras_require]
dev =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    black>=23.0.0
    isort>=5.12.0
    flake8>=6.1.0
    mypy>=1.0.0
    jupyter>=1.0.0
    notebook>=6.4.0
docs =
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.2.0
    numpydoc>=1.5.0
gpu =
    torch[cuda]>=2.0.0

[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
exclude =
    .git,
    __pycache__,
    build,
    dist,
    *.egg-info,
    .venv,
    .tox,
    docs/_build

[tool:pytest]
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
addopts =
    --strict-markers
    --strict-config
    --cov=bayesian_changepoint_detection
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    gpu: marks tests that require GPU

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[coverage:run]
source = bayesian_changepoint_detection
omit =
    */tests/*
    */test_*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod